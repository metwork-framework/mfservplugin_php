# This is the cron configuration for your plugin
# This crontab fragment will be injected into the mfserv crontab
#
# Line starting with # (comments) will be ignored
#
# You have to follow the crontab standard syntax but you have some additional helpers
# available:
# - your command should start with {{MFSERV_HOME}}/bin/cronwrap.sh
#   (to get the mfserv metwork profile loaded and to get some additional features
#    see cronwrap.py --help to get some additional features available)
# - then, you should capture your logs with "--log-capture-to" option (see examples)
#   (with this option, you will get automatic rotation for your log files)
# - then, you should use plugin_wrapper wrapper to get your command executed in
#   the context/env of your plugin
# - {{MFSERV_CURRENT_PLUGIN_NAME}} will be replaced by your plugin name
# - {{MFSERV_CURRENT_PLUGIN_DIR}} will be replaced by your plugin dir (absolute)
# - {{ENV_VAR}} will be replaced by the corresponding ENV_VAR
# - you can use jinja2 syntax
#
# Full example:
# 0 2 * * * {{MFSERV_HOME}}/bin/cronwrap.sh --lock --log-capture-to your_command.log -- plugin_wrapper {{MFSERV_CURRENT_PLUGIN_NAME}} -- {{MFSERV_CURRENT_PLUGIN_DIR}}/bin/your_command.sh
# => will execute every dat at 02:00 the command {{MFSERV_CURRENT_PLUGIN_DIR}}/bin/your_command.sh
#    in your plugin context/env with an automatic log capture to your_command.log
#    (you will find it under {{MFMODULE_RUNTIME_HOME}}/log) with the --lock feature of cronwrap.py
